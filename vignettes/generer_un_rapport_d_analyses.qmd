---
title: "Générer un rapport d'analyses"
format:
  html:
    code-fold: true
    toc: true
    toc-depth: 2
    self-contained: true
    theme: cosmo
engine: knitr
---

# Introduction 

Ce document montre comment utiliser les fonctions `summary.commune`, `summary.departement`, et `generer_rapport()` du package **firstlibsabiron** pour générer des rapports d'analyses.

---

## 1. Utilisation de `summary.commune`

La fonction `summary.commune` permet de résumer les données pour une commune donnée.

```{r}
remotes::install_github("Felixsabiron/firstlibsabiron")
```


```{r}
library(firstlibsabiron)
library(dplyr)
```

```{r}
# Exemple pour la commune de Nantes (44109)
commune_data <- elus_conseillers_municipaux_cm %>%
  filter(Code.de.la.commune == "44109") %>%
  creer_commune()

summary_commune(commune_data)


```

```{r setup}
# Exemple pour le département de la Loire-Atlantique (44)
departement_data <- elus_conseillers_municipaux_cm %>%
  filter(Code.du.departement == "44") %>%
  creer_departement()

summary_departement(departement_data)
```


```{r}
# Exemple pour generer un rapport sur la commune 44109 et le departement 44
#generer_rapport(commune = "44109", departement = "44", output = "rapport_nantes_final.html")
```

